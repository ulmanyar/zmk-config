/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include "keys_sv.h"

#define NAV 2
#define SYM 3
#define NUM 4
#define ADJ 5

// Keycode defines
#define VD_NEW          LC(LG(D))
#define VD_LEFT         LC(LG(LEFT))
#define VD_RIGHT        LC(LG(RIGHT))
#define VD_CLOSE        LC(LG(F4))

&mt     {
        retro-tap;
         };

&sk     {
        release-after-ms = <2000>;
        quick-release;
         };

&sl     {
         release-after-ms = <150>;
         };

/ {
        combos {
                compatible = "zmk,combos";
                combo_bksp {
                        timeout-ms = <30>;
                        key-positions = <19 20>;
                        bindings = <&kp BACKSPACE>;
                };
                combo_backwards_del {
                        timeout-ms = <45>;
                        key-positions = <19 20 21>;
                        bindings = <&kp LC(BACKSPACE)>;
                };
                combo_backwards_del_term {
                        timeout-ms = <45>;
                        key-positions = <7 8 9>;
                        bindings = <&kp LA(BACKSPACE)>;
                };
                combo_capslock {
                        timeout-ms = <50>;
                        key-positions = <16 19>;
                        bindings = <&kp CAPSLOCK>;
                };
                combo_tab {
                        timeout-ms = <25>;
                        key-positions = <15 16>;
                        bindings = <&kp TAB>;
                };
                combo_return {
                        timeout-ms = <50>;
                        key-positions = <21 22>;
                        bindings = <&kp RET>;
                };
                combo_esc {
                        timeout-ms = <50>;
                        key-positions = <13 14>;
                        bindings = <&kp ESC>;
                };
        };


        behaviors {
                win_swap: win_swapper {
                        compatible = "zmk,behavior-tri-state";
                        label = "WIN SWAPPER";
                        #binding-cells = <0>;
                        bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
                        ignored-key-positions = <16 19>;
                };

                tab_swap: tab_swapper {
                        compatible = "zmk,behavior-tri-state";
                        label = "TAB SWAPPER";
                        #binding-cells = <0>;
                        bindings = <&kt LCTRL>, <&kp TAB>, <&kt LCTRL>;
                        ignored-key-positions = <16 19>;
                };

                vd_swap: vd_swapper {
                        compatible = "zmk,behavior-mod-morph";
                        label = "VD SWAPPER";
                        #binding-cells = <0>;
                        bindings = <&kp LC(LG(RIGHT))>, <&kp LC(LG(LEFT))>;
                        mods = <(MOD_LSFT)>;
                };

                vd_mgr: vd_manager {
                        compatible = "zmk,behavior-mod-morph";
                        label = "VD MANAGER";
                        #binding-cells = <0>;
                        bindings = <&kp LC(LG(SV_D))>, <&kp LC(LG(F4))>;
                        mods = <(MOD_LSFT)>;
                };
        };


//          -----------------------------------------               -----------------------------------------
// ---------|   1   |   2   |   3   |   4   |   5   |     split     |   6   |   7   |   8   |   9  |   10  |---------
// |   0    |----------------------------------------               ----------------------------------------|   11   |
// ---------|   13  |   14  |   15  |   16  |   17  |     split     |   18  |   19  |   20  |   21  |   22  |---------
// |   12   |----------------------------------------               ----------------------------------------|   23   |
// ---------|   24  |   25  |   26  |   27  |   28  |     split     |   29  |   30  |   31  |   32  |   33  |---------
//          -------------------------------------------------------------------------------------------------
//                          |   34  |   35  |   36  |       37      |   38  |   39  |   40  |
//                          -----------------------------------------------------------------

        keymap {
                compatible = "zmk,keymap";

                default_layer_enc_0 {
//          -----------------------------------------               -----------------------------------------
// ---------|   Q   |   W   |   E   |   R   |   T   |     split     |   Y   |   U   |   I   |   O   |   P   |---------
// |  ESC   |----------------------------------------               ----------------------------------------|  BSPC  |
// ---------|   A   |   S   |   D   |   F   |   G   |     split     |   H   |   J   |   K   |   L   |   '   |---------
// |  CTRL  |----------------------------------------               ----------------------------------------|   RET  |
// ---------|   Z   |   X   |   C   |   D   |   V   |     split     |   K   |   H   |   ,   |   .   |   -   |---------
//          -------------------------------------------------------------------------------------------------
//                          |  LGUI | LOWER | LSHFT |    ENC FCN    | RAISE |  SPC  | ADJUST|
//                          -----------------------------------------------------------------
      bindings = <
    &kp ESC &kp Q   &kp W   &kp F   &kp P   &kp B     /*split*/    &kp J   &kp L   &kp U   &kp Y   &key_repeat &kp BSPC
    &kp TAB &kp A   &kp R   &kp S   &kp T   &kp G     /*split*/    &kp M   &kp N   &kp E   &kp I   &kp O   &kp RET
            &kp Z   &kp X   &kp C   &kp D   &kp V     /*split*/    &kp K   &kp H   &kp SV_COMMA &kp SV_DOT &kp SV_MINUS 
                            &mo SYM &mo NAV &kp LSHFT &to 1        &kp SPACE &mo NUM &mo ADJ

                        >;
                sensor-bindings = <&inc_dec_kp LC(LEFT) LC(RIGHT)>;
                };
                
                // Setup multiple "default layers" with different encoder bindings and toggle using encoder button
                default_layer_enc_1 {
      bindings = <
    &kp ESC &kp Q   &kp W   &kp F   &kp P   &kp B     /*split*/    &kp J   &kp L   &kp U   &kp Y   &key_repeat &kp BSPC
    &kp TAB &kp A   &kp R   &kp S   &kp T   &kp G     /*split*/    &kp M   &kp N   &kp E   &kp I   &kp O       &kp RET
            &kp Z   &kp X   &kp C   &kp D   &kp V     /*split*/    &kp K   &kp H   &kp SV_COMMA &kp SV_DOT &kp SV_MINUS 
                            &mo SYM &mo NAV &kp LSHFT &to 0        &kp SPACE &mo NUM &mo ADJ

                        >;
                sensor-bindings = <&inc_dec_kp LC(LS(TAB)) LC(TAB)>;
                };

                navigation_layer {
//          -----------------------------------------               ----------------------------------------- 
// ---------|  BACK | WinSwp| TabSwp| VDSwp |  LGUI |     split     |  HOME | PG DN | PG UP |  END  |       |---------
// |  ESC   |----------------------------------------               ----------------------------------------|  BSPC  |
// ---------|  LGUI |  LALT | LCTRL | LSHFT |       |     split     |  LEFT |  DOWN |   UP  | RIGHT |       |---------
// |  CTRL  |----------------------------------------               ----------------------------------------|   RET  |
// ---------|       |       |       |       | VDMgr |     split     |  TAB  |  INS  |   Ö   |   Ä   |   Å   |---------
//          -----------------------------------------               -----------------------------------------
//                          |       |       | A(F4) |     split     |  BSPC |  DEL  |       |
//                          -------------------------               -------------------------
      bindings = <
    &trans  &kp LA(LEFT) &win_swap    &tab_swap    &vd_swap     &kp LGUI     /*split*/   &kp HOME  &kp PG_DN &kp PG_UP &kp END   &none         &trans
    &trans  &sk LGUI     &sk LALT     &sk LCTRL    &sk LSHFT    &none        /*split*/   &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &none         &trans
            &none        &none        &none        &none        &vd_mgr      /*split*/   &kp TAB   &kp INS   &kp SV_O_UMLAUT &kp SV_A_UMLAUT &kp SV_A_RING
                                      &trans       &trans       &kp LA(F4)   &trans      &kp BSPC  &kp DEL   &trans

                        >;

                };

                symbol_layer {
//          -----------------------------------------               -----------------------------------------
// ---------|   £   |   !   |   <   |   [   |   /   |     split     |   \   |   ]   |   >   |   ?   |   +   |---------
// |  ESC   |----------------------------------------               ----------------------------------------|  BSPC  |
// ---------|   ¤   |   "   |   {   |   (   |   %   |     split     |   &   |   )   |   }   |   '   |   =   |---------
// |  CTRL  |----------------------------------------               ----------------------------------------|   RET  |
// ---------|   |   |   @   |   £   |   $   |   |   |     split     |   -   |   +   |   =   |   *   |   _   |---------
//          -------------------------------------------------------------------------------------------------
//                          |       |       |  CAPS |    ENC MUTE   |       |       |       |
//                          -----------------------------------------------------------------
      bindings = <
 &trans &kp SV_POUND_SIGN &kp SV_EXCL   &kp SV_LT     &kp SV_LBKT   &kp SV_SLASH  /*split*/   &kp SV_BSLH   &kp SV_RBKT   &kp SV_GT     &kp SV_QMARK  &kp SV_PLUS   &trans
    &trans  &kp SV_CURREN &kp SV_DQT    &kp SV_LBRC   &kp SV_LPAR   &kp SV_PRCNT  /*split*/   &kp SV_AMPS   &kp SV_RPAR   &kp SV_RBRC   &kp SV_SQT    &kp SV_EQUAL  &trans
            &kp SV_PIPE   &kp SV_AT     &kp SV_POUND  &kp SV_DLLR   &kp SV_PIPE   /*split*/   &kp SV_MINUS  &kp SV_PLUS   &kp SV_EQUAL  &kp SV_ASTRK  &kp SV_UNDER
                                        &trans        &trans        &kp CAPS      &trans      &trans        &trans        &trans

                        >;
                        
                };

                number_layer {
//          -----------------------------------------               ----------------------------------------- 
// ---------|       |   7   |   8   |   9   |   +   |     split     |   ´   |   ^   |   ~   |   ¨   |       |---------
// |  ESC   |----------------------------------------               ----------------------------------------|  BSPC  |
// ---------|   /   |   4   |   5   |   6   |   =   |     split     |   `   | LSHFT | LCTRL |  LALT |  LGUI |---------
// |  CTRL  |----------------------------------------               ----------------------------------------|   RET  |
// ---------|   *   |   1   |   2   |   3   |   -   |     split     |  F6   |       |       |       |       |---------
//          -----------------------------------------               -----------------------------------------
//                          |   ,   |   0   |   .   |     split     |       |  NUM  |       |
//                          -------------------------               -------------------------
      bindings = <
    &trans  &none        &kp N7    &kp N8    &kp N9   &kp SV_PLUS  /*split*/ &kp SV_ACUTE &kp SV_CARET &kp SV_TILDE &kp SV_UMLAUT &none        &trans
    &trans  &kp SV_SLASH &kp N4    &kp N5    &kp N6   &kp SV_EQUAL /*split*/ &kp SV_GRAVE &sk LSHFT    &sk LCTRL    &sk LALT      &sk LGUI     &trans
            &kp SV_ASTRK &kp N1    &kp N2    &kp N3   &kp SV_MINUS /*split*/ &none        &none        &none        &none         &none  
                                &kp SV_COMMA &kp N0   &kp SV_DOT    &trans   &trans       &tog NUM     &trans

                        >;

                };

                adjust_layer {
//          -----------------------------------------               -----------------------------------------
// ---------|       |   F7  |   F8  |   F9  |  F10  |     split     |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |---------
// |        |----------------------------------------               ----------------------------------------| O BLE  |
// ---------|       |   F4  |   F5  |   F6  |  F11  |     split     |       | LSHFT | LCTRL |  LALT |  LGUI |---------
// |        |----------------------------------------               ----------------------------------------| O USB  |
// ---------|       |   F1  |   F2  |   F3  |  F12  |     split     | RESET |  BOOT | BT CLR|       |       |---------
//          -----------------------------------------               -----------------------------------------
//                          |       |       |       |     split     |       |       |       |
//                          -------------------------               -------------------------
      bindings = <
    &none   &none   &kp F7  &kp F8  &kp F9  &kp F10 /*split*/   &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5  &out OUT_BLE
    &none   &none   &kp F4  &kp F5  &kp F6  &kp F11 /*split*/   &none        &sk LSHFT    &sk LCTRL    &sk LALT     &sk LGUI      &out OUT_USB
            &none   &kp F1  &kp F2  &kp F3  &kp F12 /*split*/   &sys_reset   &bootloader  &bt BT_CLR   &none        &none       
                            &trans  &trans  &trans &kp C_MUTE   &trans       &tog NUM     &trans  
                        >;

                };
        };
};

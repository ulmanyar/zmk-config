/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include "keys_sv.h"

#define NAV 1
#define NUM 2
#define SYM 3
#define ADJ 4

// Keycode defines
#define VD_NEW          LC(LG(D))
#define VD_LEFT         LC(LG(LEFT))
#define VD_RIGHT        LC(LG(RIGHT))
#define VD_CLOSE        LC(LG(F4))

&mt     {
        retro-tap;
         };

&sk     {
        release-after-ms = <2000>;
        quick-release;
         };

&sl     {
         release-after-ms = <150>;
         };

/ {
        combos {
                compatible = "zmk,combos";
                combo_bksp {
                        timeout-ms = <30>;
                        key-positions = <19 20>;
                        bindings = <&kp BACKSPACE>;
                };
                combo_backwards_del {
                        timeout-ms = <45>;
                        key-positions = <19 20 21>;
                        bindings = <&kp LC(BACKSPACE)>;
                };
                combo_capslock {
                        timeout-ms = <50>;
                        key-positions = <16 19>;
                        bindings = <&kp CAPSLOCK>;
                };
                combo_tab {
                        timeout-ms = <50>;
                        key-positions = <15 16>;
                        bindings = <&kp TAB>;
                };
                combo_return {
                        timeout-ms = <50>;
                        key-positions = <21 22>;
                        bindings = <&kp RET>;
                };
        };


        behaviors {
                win_swap: win_swapper {
                compatible = "zmk,behavior-tri-state";
                label = "WIN SWAPPER";
                #binding-cells = <0>;
                bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
                ignored-key-positions = <16 19>;
                };

                tab_swap: tab_swapper {
                compatible = "zmk,behavior-tri-state";
                label = "TAB SWAPPER";
                #binding-cells = <0>;
                bindings = <&kt LCTRL>, <&kp TAB>, <&kt LCTRL>;
                ignored-key-positions = <16 19>;
                };
        };


//          -----------------------------------------               -----------------------------------------
// ---------|   1   |   2   |   3   |   4   |   5   |     split     |   6   |   7   |   8   |   9  |   10  |---------
// |   0    |----------------------------------------               ----------------------------------------|   11   |
// ---------|   13  |   14  |   15  |   16  |   17  |     split     |   18  |   19  |   20  |   21  |   22  |---------
// |   12   |----------------------------------------               ----------------------------------------|   23   |
// ---------|   24  |   25  |   26  |   27  |   28  |     split     |   29  |   30  |   31  |   32  |   33  |---------
//          -------------------------------------------------------------------------------------------------
//                          |   34  |   35  |   36  |       37      |   38  |   39  |   40  |
//                          -----------------------------------------------------------------

        keymap {
                compatible = "zmk,keymap";

                default_layer {
//          -----------------------------------------               -----------------------------------------
// ---------|   Q   |   W   |   E   |   R   |   T   |     split     |   Y   |   U   |   I   |   O   |   P   |---------
// |  ESC   |----------------------------------------               ----------------------------------------|  BSPC  |
// ---------|   A   |   S   |   D   |   F   |   G   |     split     |   H   |   J   |   K   |   L   |   '   |---------
// |  CTRL  |----------------------------------------               ----------------------------------------|   RET  |
// ---------|   Z   |   X   |   C   |   D   |   V   |     split     |   K   |   H   |   ,   |   .   |   -   |---------
//          -------------------------------------------------------------------------------------------------
//                          |  LGUI | LOWER | LSHFT |    ENC MUTE   | RAISE |  SPC  | ADJUST|
//                          -----------------------------------------------------------------
      bindings = <
    &kp ESC &kp Q   &kp W   &kp F   &kp P   &kp B     /*split*/    &kp J   &kp L   &kp U   &kp Y   &none   &kp BSPC
    &kp TAB &kp A   &kp R   &kp S   &kp T   &kp G     /*split*/    &kp M   &kp N   &kp E   &kp I   &kp O   &kp RET
            &kp Z   &kp X   &kp C   &kp D   &kp V     /*split*/    &kp K   &kp H   &kp SV_COMMA &kp SV_DOT &kp SV_MINUS 
                            &mo ADJ &mo NAV &kp LSHFT &kp C_MUTE   &kp SPACE &mo SYM &mo NUM

                        >;
                sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
                };

                navigation_layer {
//          -----------------------------------------               ----------------------------------------- 
// ---------|   ?   |   ?   |       |  LGUI | SLEEP |     split     |  HOME | PG UP | PG DN |  END  |       |---------
// |  ESC   |----------------------------------------               ----------------------------------------|  BSPC  |
// ---------|  LGUI |  LALT | LCTRL | LSHFT | CLOSE |     split     |  LEFT |  DOWN |   UP  | RIGHT |   Å   |---------
// |  CTRL  |----------------------------------------               ----------------------------------------|   RET  |
// ---------| VD CLS| VD LFT| VD RGT| VD NEW|       |     split     |       |  TAB  |  INS  |   Ö   |   Ä   |---------
//          -----------------------------------------               -----------------------------------------
//                          |       |       |       |     split     |       |  DEL  |       |
//                          -------------------------               -------------------------
      bindings = <
    &trans  &win_swap    &tab_swap    &none        &kp LGUI     &kp C_SLEEP  /*split*/   &kp HOME  &kp PG_UP &kp PG_DN &kp END   &none         &trans
    &trans  &sk LGUI     &sk LALT     &sk LCTRL    &sk LSHFT    &kp LA(F4)   /*split*/   &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &sk SV_A_RING &trans
            &kp VD_CLOSE &kp VD_LEFT  &kp VD_RIGHT &kp VD_NEW   &none        /*split*/   &none     &kp TAB   &kp INS   &kp SV_O_UMLAUT &kp SV_A_UMLAUT 
                                      &trans       &trans       &trans       &trans      &trans    &kp DEL   &trans

                        >;

                };

                number_layer {
//          -----------------------------------------               ----------------------------------------- 
// ---------|   1   |   2   |   3   |   4   |   5   |     split     |   6   |   7   |   8   |   9   |   0   |---------
// |  ESC   |----------------------------------------               ----------------------------------------|  BSPC  |
// ---------|  LGUI |  LALT | LCTRL | LSHFT |  F11  |     split     |  F12  | LSHFT | LCTRL |  LALT |  LGUI |---------
// |  CTRL  |----------------------------------------               ----------------------------------------|   RET  |
// ---------|  F1   |  F2   |  F3   |  F4   |  F5   |     split     |  F6   |  F7   |  F8   |  F9   |  F10  |---------
//          -----------------------------------------               -----------------------------------------
//                          |   ,   |   0   |   .   |     split     |       |       |       |
//                          -------------------------               -------------------------
      bindings = <
    &trans  &kp N1     &kp N2    &kp N3    &kp N4    &kp N5    /*split*/   &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &trans
    &trans  &sk LGUI   &sk LALT  &sk LCTRL &sk LSHFT &kp F12   /*split*/   &kp F11   &sk LSHFT &sk LCTRL &sk LALT  &sk LGUI  &trans
            &kp F1     &kp F2    &kp F3    &kp F4    &kp F5    /*split*/   &kp F6    &kp F7    &kp F8    &kp F9    &kp F10
                              &kp SV_COMMA &kp N0    &kp SV_DOT &kp B      &trans    &trans    &trans

                        >;

                };

                symbol_layer {
//          -----------------------------------------               -----------------------------------------
// ---------|   ´   |   `   |   ^   |   ~   |   ¨   |     split     |   '   |   \   |   <   |   >   |   +   |---------
// |  ESC   |----------------------------------------               ----------------------------------------|  BSPC  |
// ---------|   !   |   "   |   #   |   ¤   |   %   |     split     |   &   |   /   |   (   |   )   |   =   |---------
// |  CTRL  |----------------------------------------               ----------------------------------------|   RET  |
// ---------|   ?   |   @   |   £   |   $   |   |   |     split     |   *   |   {   |   [   |   ]   |   }   |---------
//          -------------------------------------------------------------------------------------------------
//                          |       |   +   |  CAPS |    ENC MUTE   |       |  DEL  |       |
//                          -----------------------------------------------------------------
      bindings = <
    &trans  &kp SV_ACUTE  &kp SV_GRAVE  &kp SV_CARET  &kp SV_TILDE  &kp SV_UMLAUT /*split*/   &kp SV_SQT    &kp SV_BSLH   &kp SV_LT     &kp SV_GT     &kp SV_PLUS   &trans
    &trans  &kp SV_EXCL   &kp SV_DQT    &kp SV_POUND  &kp SV_CURREN &kp SV_PRCNT  /*split*/   &kp SV_AMPS   &kp SV_SLASH  &kp SV_LPAR   &kp SV_RPAR   &kp SV_EQUAL  &trans
            &kp SV_QMARK  &kp SV_AT &kp SV_POUND_SIGN &kp SV_DLLR   &kp SV_PIPE   /*split*/   &kp SV_ASTRK  &kp SV_LBRC   &kp SV_LBKT   &kp SV_RBKT   &kp SV_RBRC
                                        &trans        &kp SV_PLUS   &kp CAPS      &trans      &trans        &trans        &trans

                        >;
                        
                };

                adjust_layer {
//          -----------------------------------------               -----------------------------------------
// ---------|       |       |       |       |       |     split     |       |   F7  |   F8  |   F9  |  F10  |---------
// | O BLE  |----------------------------------------               ----------------------------------------|        |
// ---------|  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |     split     |       |   F4  |   F5  |   F6  |  F11  |---------
// | O USB  |----------------------------------------               ----------------------------------------|        |
// ---------| RESET |  BOOT | BT CLR|       |       |     split     |       |   F1  |   F2  |   F3  |  F12  |---------
//          -----------------------------------------               -----------------------------------------
//                          |       |  LALT |       |     split     |       |       |       |
//                          -------------------------               -------------------------
      bindings = <
    &out OUT_BLE &none        &none        &none        &none        &none        /*split*/   &none   &kp F7  &kp F8  &kp F9  &kp F10  &none
    &out OUT_USB &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5 /*split*/   &none   &kp F4  &kp F5  &kp F6  &kp F11  &none
                 &reset       &bootloader  &bt BT_CLR   &none        &none        /*split*/   &none   &kp F1  &kp F2  &kp F3  &kp F12
                                           &trans       &trans       &trans       &kp C_MUTE  &trans  &trans  &trans
                        >;

                };
        };
};
